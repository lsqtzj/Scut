//------------------------------------------------------------------------------
// <auto-generated>
// 此代码由Codesmith工具生成。
// 此文件的更改可能会导致不正确的行为，如果
// 重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using ProtoBuf;
using ZyGames.Framework.Common;
using ZyGames.Framework.Collection;
using ZyGames.Framework.Model;


namespace ZyGames.Doudizhu.Model
{
    /// <summary>
    /// 
    /// </summary>
    /// <![CDATA[
    /// @periodTime:设置生存周期(秒)
    /// @personalName: 映射UserId对应的字段名,默认为"UserId"
    /// ]]>
    /// </remarks>
    [Serializable, ProtoContract]
    [EntityTable(AccessLevel.ReadOnly, DbConfig.Config, "TaskInfo")]
    public class TaskInfo : ShareEntity
    {

        /// <summary>
        /// </summary>
        public TaskInfo()
            : base(AccessLevel.ReadOnly)
        {
            
        }        
        /// <summary>
        /// </summary>
        public TaskInfo(int taskID)
            : this()
        {
            _taskID = taskID;
        }

        #region 自动生成属性
        private int _taskID;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(1)]
        [EntityField("TaskID", IsKey = true)]
        public int TaskID
        {
            get
            {
                return _taskID;
            } 
            
        }
        private string _taskName;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(2)]
        [EntityField("TaskName")]
        public string TaskName
        {
            get
            {
                return _taskName;
            } 
            
        }
        private TaskType _taskType;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(3)]
        [EntityField("TaskType")]
        public TaskType TaskType
        {
            get
            {
                return _taskType;
            } 
            
        }
        private TaskClass _taskClass;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(4)]
        [EntityField("TaskClass")]
        public TaskClass TaskClass
        {
            get
            {
                return _taskClass;
            } 
            
        }
        private int _restraintNum;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(5)]
        [EntityField("RestraintNum")]
        public int RestraintNum
        {
            get
            {
                return _restraintNum;
            } 
            
        }
        private int _achieveID;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(6)]
        [EntityField("AchieveID")]
        public int AchieveID
        {
            get
            {
                return _achieveID;
            } 
            
        }
        private int _gameCoin;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(7)]
        [EntityField("GameCoin")]
        public int GameCoin
        {
            get
            {
                return _gameCoin;
            } 
            
        }
        private string _taskDesc;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(8)]
        [EntityField("TaskDesc")]
        public string TaskDesc
        {
            get
            {
                return _taskDesc;
            } 
        }
    
        protected override object this[string index]
		{
			get
			{
                #region
				switch (index)
				{
                    case "TaskID": return _taskID;
                    case "TaskName": return _taskName;
                    case "TaskType": return _taskType;
                    case "TaskClass": return _taskClass;
                    case "RestraintNum": return _restraintNum;
                    case "AchieveID": return _achieveID;
                    case "GameCoin": return _gameCoin;
                    case "TaskDesc": return _taskDesc;
					default: throw new ArgumentException(string.Format("TaskInfo index[{0}] isn't exist.", index));
				}
                #endregion
			}
			set
			{
                #region
				switch (index)
				{
                    case "TaskID": 
                        _taskID = value.ToInt();
                        break; 
                    case "TaskName": 
                        _taskName = value.ToNotNullString();
                        break; 
                    case "TaskType":
				        _taskType = value.ToEnum<TaskType>();
                        break; 
                    case "TaskClass":
				        _taskClass = value.ToEnum<TaskClass>();
                        break; 
                    case "RestraintNum": 
                        _restraintNum = value.ToInt();
                        break; 
                    case "AchieveID": 
                        _achieveID = value.ToInt();
                        break; 
                    case "GameCoin": 
                        _gameCoin = value.ToInt();
                        break; 
                    case "TaskDesc": 
                        _taskDesc = value.ToNotNullString();
                        break; 
					default: throw new ArgumentException(string.Format("TaskInfo index[{0}] isn't exist.", index));
				}
                #endregion
			}
		}
        #endregion
	}
}