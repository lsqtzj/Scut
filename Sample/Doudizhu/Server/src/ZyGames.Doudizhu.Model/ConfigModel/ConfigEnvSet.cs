//------------------------------------------------------------------------------
// <auto-generated>
// 此代码由Codesmith工具生成。
// 此文件的更改可能会导致不正确的行为，如果
// 重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using ProtoBuf;
using ZyGames.Framework.Common;
using ZyGames.Framework.Collection;
using ZyGames.Framework.Game.Cache;
using ZyGames.Framework.Model;


namespace ZyGames.Doudizhu.Model
{
    /// <summary>
    /// 
    /// </summary>
    /// <![CDATA[
    /// @periodTime:设置生存周期(秒)
    /// @personalName: 映射UserId对应的字段名,默认为"UserId"
    /// ]]>
    /// </remarks>
    [Serializable, ProtoContract]
    [EntityTable(AccessLevel.ReadOnly, DbConfig.Config, "ConfigEnvSet")]
    public class ConfigEnvSet : ShareEntity
    {

        public static int GetInt(string key, int defValue = 0)
        {
            var item = new ConfigCacheSet<ConfigEnvSet>().FindKey(key);
            return item == null ? defValue : item.EnvValue.ToInt();
        }

        public static decimal GetDecimal(string key, decimal defValue = 0)
        {
            var item = new ConfigCacheSet<ConfigEnvSet>().FindKey(key);
            return item == null ? defValue : item.EnvValue.ToDecimal();
        }
        public static double GetDouble(string key, double defValue = 0)
        {
            var item = new ConfigCacheSet<ConfigEnvSet>().FindKey(key);
            return item == null ? defValue : item.EnvValue.ToDouble();
        }

        public static string GetString(string key, string defValue = "")
        {
            var item = new ConfigCacheSet<ConfigEnvSet>().FindKey(key);
            return item == null ? defValue : item.EnvValue.ToNotNullString();
        }

        /// <summary>
        /// </summary>
        public ConfigEnvSet()
            : base(AccessLevel.ReadOnly)
        {

        }
        /// <summary>
        /// </summary>
        public ConfigEnvSet(string envKey)
            : this()
        {
            _envKey = envKey;
        }

        #region 自动生成属性
        private string _envKey;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(1)]
        [EntityField("EnvKey", IsKey = true)]
        public string EnvKey
        {
            get
            {
                return _envKey;
            }

        }
        private string _envValue;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(2)]
        [EntityField("EnvValue")]
        public string EnvValue
        {
            get
            {
                return _envValue;
            }

        }
        private string _envDesc;
        /// <summary>
        /// 
        /// </summary>        
        [ProtoMember(3)]
        [EntityField("EnvDesc")]
        public string EnvDesc
        {
            get
            {
                return _envDesc;
            }

        }

        protected override object this[string index]
        {
            get
            {
                #region
                switch (index)
                {
                    case "EnvKey": return _envKey;
                    case "EnvValue": return _envValue;
                    case "EnvDesc": return _envDesc;
                    default: throw new ArgumentException(string.Format("ConfigEnvSet index[{0}] isn't exist.", index));
                }
                #endregion
            }
            set
            {
                #region
                switch (index)
                {
                    case "EnvKey":
                        _envKey = value.ToNotNullString();
                        break;
                    case "EnvValue":
                        _envValue = value.ToNotNullString();
                        break;
                    case "EnvDesc":
                        _envDesc = value.ToNotNullString();
                        break;
                    default: throw new ArgumentException(string.Format("ConfigEnvSet index[{0}] isn't exist.", index));
                }
                #endregion
            }
        }

        #endregion


    }
}